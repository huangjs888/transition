{"version":3,"file":"easing.min.js","sources":["../src/easing/index.ts"],"sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-10-10 14:22:17\n * @Description: ******\n */\n\n// 对于函数 s = f(t)\n// 函数平移(x,y)（函数自变量t变为t-x，整体结果f(t)+y）\n// 函数缩放 k 倍（函数自变量t变为t/k，整体结果f(t)*k）\n// 先平移再缩放：s = (f((t/k)-x)+y)*k\n// 先缩放再平移：s = (f((t-x)/k)*k)+y\n\nexport type EaseFn = (t: number) => number;\n\nconst baseEase: { [key in string]: EaseFn } = {\n  linear: (t) => t,\n  inQuad: (t) => t * t,\n  outQuad: (t) => 1 - (1 - t) * (1 - t),\n  inCubic: (t) => t * t * t,\n  outCubic: (t) => 1 - (1 - t) * (1 - t) * (1 - t),\n  inQuart: (t) => t * t * t * t,\n  outQuart: (t) => 1 - (1 - t) * (1 - t) * (1 - t) * (1 - t),\n  inQuint: (t) => t * t * t * t * t,\n  outQuint: (t) => 1 - (1 - t) * (1 - t) * (1 - t) * (1 - t) * (1 - t),\n};\n\nexport const easeLinear = baseEase.linear;\n\nexport const easeInQuad = baseEase.inQuad;\n\nexport const easeOutQuad = baseEase.outQuad;\n\nexport const easeInCubic = baseEase.inCubic;\n\nexport const easeOutCubic = baseEase.outCubic;\n\nexport const easeInQuart = baseEase.inQuart;\n\nexport const easeOutQuart = baseEase.outQuart;\n\nexport const easeInQuint = baseEase.inQuint;\n\nexport const easeOutQuint = baseEase.outQuint;\n\n// 取值easeFn函数变量的某一段转成easing函数，a为开始变量值，b为结束变量值\nexport function createEase(a: number = 0, b: number = 1, easeFn: EaseFn = baseEase.linear): EaseFn {\n  const k = 1 / (b - a);\n  if (!k || k <= 0) {\n    return () => 0;\n  }\n  // easeFn先平移( -a , -easeFn(a) )，再缩放 k 倍\n  // 接着使函数值也在(0,1)之间，即：经上述变换之后的函数，另变量为1，求函数值，函数再除以该函数值得到最终的函数\n  return (t: number) =>\n    ((easeFn(t / k + a) - easeFn(a)) * k) / ((easeFn(1 / k + a) - easeFn(a)) * k);\n}\n\n// 把两个easing函数连接转成新的easing函数，k为比例\nexport function createEaseInOut(\n  k: number = 1 / 2,\n  easeIn: EaseFn = baseEase.linear,\n  easeOut: EaseFn = baseEase.linear,\n): EaseFn {\n  if (k <= 0) {\n    return easeOut;\n  }\n  if (k >= 1) {\n    return easeIn;\n  }\n  return (t: number) =>\n    t <= k\n      ? // easeIn直接缩放k\n        easeIn(t / k) * k\n      : // easeOut衔接easeIn，需要先平移( k/(1-k) , k/(1-k) )，再缩放 1-k\n        (easeOut(t / (1 - k) - k / (1 - k)) + k / (1 - k)) * (1 - k);\n}\n\nexport const easeInOutQuad = createEaseInOut(1 / 2, baseEase.outQuad, baseEase.inQuad);\n\nexport const easeOutInQuad = createEaseInOut(1 / 2, baseEase.inQuad, baseEase.outQuad);\n"],"names":["baseEase","t","easeLinear","easeInQuad","easeOutQuad","easeInCubic","easeOutCubic","easeInQuart","easeOutQuart","easeInQuint","easeOutQuint","createEaseInOut","k","easeIn","easeOut","easeInOutQuad","easeOutInQuad","a","b","easeFn"],"mappings":"8OAgBA,IAAMA,EACI,SAACC,GAAC,OAAKA,CAAC,EADZD,EAEI,SAACC,GAAC,OAAKA,EAAIA,CAAC,EAFhBD,EAGK,SAACC,GAAC,OAAK,GAAK,EAAIA,IAAM,EAAIA,EAAE,EAS1BC,EAAaF,EAEbG,EAAaH,EAEbI,EAAcJ,EAEdK,EAdF,SAACJ,GAAC,OAAKA,EAAIA,EAAIA,CAAC,EAgBdK,EAfD,SAACL,GAAC,OAAK,GAAK,EAAIA,IAAM,EAAIA,IAAM,EAAIA,EAAE,EAiBrCM,EAhBF,SAACN,GAAC,OAAKA,EAAIA,EAAIA,EAAIA,CAAC,EAkBlBO,EAjBD,SAACP,GAAC,OAAK,GAAK,EAAIA,IAAM,EAAIA,IAAM,EAAIA,IAAM,EAAIA,EAAE,EAmB/CQ,EAlBF,SAACR,GAAC,OAAKA,EAAIA,EAAIA,EAAIA,EAAIA,CAAC,EAoBtBS,EAnBD,SAACT,GAAC,OAAK,GAAK,EAAIA,IAAM,EAAIA,IAAM,EAAIA,IAAM,EAAIA,IAAM,EAAIA,EAAE,EAkC/D,SAASU,EACdC,EACAC,EACAC,GAEA,YAJS,IAATF,IAAAA,EAAY,SACE,IAAdC,IAAAA,EAAiBb,QACF,IAAfc,IAAAA,EAAkBd,GAEdY,EAAK,EAGA,EAALA,EAGG,SAACX,GAAS,OACfA,EAAKW,GAIAE,EAAQb,GAAK,EAAIW,GAAKA,GAAK,EAAIA,IAAMA,GAAK,EAAIA,KAAO,EAAIA,GAF1DC,EAAOZ,EAAIW,GAAKA,CAE4C,EAPzDC,EAHAC,CAWX,KAEaC,EAAgBJ,EAAgB,GAAOX,EAAkBA,GAEzDgB,EAAgBL,EAAgB,GAAOX,EAAiBA,gBAjC9D,SAAoBiB,EAAeC,EAAeC,QAArB,IAATF,IAAAA,EAAY,QAAY,IAATC,IAAAA,EAAY,QAAiB,IAAdC,IAAAA,EAAiBnB,GACxE,IAAMY,EAAI,GAAKM,EAAID,GACnB,OAAKL,GAAKA,EAAK,EAKR,SAACX,GAAS,OACbkB,EAAOlB,EAAIW,EAAIK,GAAKE,EAAOF,IAAML,IAAOO,EAAO,EAAIP,EAAIK,GAAKE,EAAOF,IAAML,EAAE,EALtE,WAAA,OAAM,CAAC,CAMlB"}