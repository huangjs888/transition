{"version":3,"file":"animation.min.js","sources":["../src/animation/raf.ts","../src/animation/index.ts"],"sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2023-08-23 17:02:10\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-09-01 15:18:11\n * @Description: ******\n */\n\nconst root: any = typeof window === 'undefined' ? global : window;\nconst vendors = ['moz', 'webkit'];\nlet raf = root.requestAnimationFrame;\nlet caf = root.cancelAnimationFrame || root.cancelRequestAnimationFrame;\nif (!raf || !caf) {\n  for (var i = 0; i < vendors.length; i++) {\n    raf = root[`${vendors[i]}RequestAnimationFrame`];\n    caf =\n      root[`${vendors[i]}CancelAnimationFrame`] || root[`${vendors[i]}CancelRequestAnimationFrame`];\n  }\n}\nif (!raf || !caf) {\n  raf = (function () {\n    let last = 0;\n    // setTimeout时间并不精确，这里做了校准\n    return function (fn: () => void) {\n      const now = Date.now();\n      const delay = Math.max(0, 16 - (now - last));\n      last = now + delay;\n      return window.setTimeout(fn, delay);\n    };\n  })();\n  caf = function (id: number) {\n    return window.clearTimeout(id);\n  };\n}\n\nexport const requestAnimationFrame = raf;\nexport const cancelAnimationFrame = caf;\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-10-10 14:24:45\n * @Description: ******\n */\n\nimport { requestAnimationFrame, cancelAnimationFrame } from './raf';\n\nconst delayCall = (callback: IAnimationCallBack, delay: number) => {\n  if (delay > 0) {\n    return +setTimeout(callback, delay);\n  }\n  callback(Math.abs(delay));\n  return 0;\n};\n\nclass Animation {\n  duration: number; // 动画执行持续时间\n  easing: IAnimationEasing; // 动画执行时变换函数\n  delay: number; // 动画延迟多久执行\n  _delay: number = 0; // 延迟执行剩余delay时间\n  _frameId: number = 0; // 当前正在执行帧的id\n  _elapsed: number = 0; // 本次动画已经消耗的时间\n  _sleepId: number = 0; // 当前正在休眠计时id\n  _delayId: number = 0; // 当前delay计时id\n  _tick: IAnimationCallBack | null = null; // 每一帧动画执行函数\n  _delayFn: IAnimationCallBack | null = null; // 延迟执行需要执行的函数\n  constructor({ duration, easing, delay }: IAnimationOptions = {}) {\n    this.duration = typeof duration !== 'number' || duration <= 0 ? 0 : duration;\n    this.easing = typeof easing !== 'function' ? (v) => v : easing;\n    this.delay = typeof delay !== 'number' ? 0 : delay;\n  }\n  start(frameFn: IAnimationCallBack) {\n    // 只有从未开始过或着已经结束了的动画可以再开始\n    if (!this._tick && !this._delayFn) {\n      const { duration, easing, delay } = this;\n      this._delayFn = (elapsed) => {\n        this._delayId = 0;\n        this._delayFn = null;\n        this._delay = 0;\n        if (duration > 0) {\n          const tick: IAnimationCallBack = (last) => {\n            // 本帧时间戳，last：上一帧时间戳\n            const now = Date.now();\n            // 累计已经耗用的时间\n            this._elapsed += now - last;\n            if (this._elapsed < duration) {\n              // 开启下一帧\n              this._frameId = requestAnimationFrame(() => tick(now));\n              // 每一帧的进度\n              frameFn(easing(this._elapsed / duration));\n            } else {\n              // 执行完毕后清除\n              this._tick = null;\n              this._frameId = 0;\n              this._elapsed = 0;\n              frameFn(1);\n            }\n          };\n          this._tick = tick;\n          // 第一次直接用掉这些时间\n          this._elapsed = elapsed || 0;\n          tick(Date.now());\n        } else {\n          // duration为0，直接运行到最后\n          frameFn(1);\n        }\n      };\n      // 记录延迟开始时间戳\n      this._delay = Date.now();\n      // 延迟执行\n      this._delayId = delayCall(this._delayFn, delay);\n    }\n  }\n  restart() {\n    if (this._tick || this._delayFn) {\n      // 只有动画在延迟、动画、休眠，停止的时候可以restart\n      // 重启之前先停止一切\n      this.stop();\n      if (this._tick) {\n        // 动画、休眠，停止状态，停止后，启动帧继续运行\n        this._tick(Date.now());\n      }\n      if (this._delayFn) {\n        const delay = this.delay + this._delay;\n        // 更新时间戳\n        this._delay += Date.now();\n        // 延迟状态，停止后，开启新的延迟\n        this._delayId = delayCall(this._delayFn, delay);\n      }\n    }\n  }\n  sleep(time: number) {\n    if (!time || time <= 0) {\n      // 没有设置休眠时间，则不做任何操作\n      return;\n    }\n    if (this._tick || this._delayFn) {\n      // 只有动画在延迟、动画、休眠，停止的时候可以进行休眠\n      // 这里注意，停止状态的时候点休眠，相当于延迟restart，时间一到会重启动画\n      // sleep之前先停止一切\n      this.stop();\n      // 启动本次休眠\n      this._sleepId = +setTimeout(() => {\n        this._sleepId = 0;\n        // 到时间后重启动画\n        this.restart();\n      }, time);\n    }\n  }\n  stop() {\n    if (this._tick || this._delayFn) {\n      if (this._delayId) {\n        // 如果正在delay，则停止delay\n        clearTimeout(this._delayId);\n        this._delayId = 0;\n        // 停止延迟时，已耗用时间\n        this._delay -= Date.now();\n      }\n      if (this._frameId) {\n        // 如果正在运行，即正在动画，则停止动画\n        cancelAnimationFrame(this._frameId);\n        this._frameId = 0;\n      }\n      if (this._sleepId) {\n        // 如果正在sleep，则停止sleep\n        clearTimeout(this._sleepId);\n        this._sleepId = 0;\n      }\n    }\n  }\n  end() {\n    if (this._tick || this._delayFn) {\n      // 只有动画在延迟、动画、休眠，停止的时候可以直接end\n      // end之前先停止一切\n      this.stop();\n      if (this._tick) {\n        // 动画、休眠，停止状态，停止后，启动帧运行到最后\n        this._tick(Date.now() + this._elapsed - this.duration);\n      }\n      if (this._delayFn) {\n        // 延迟状态，停止后，直接运行到最后\n        this._delayFn(this.duration);\n      }\n    }\n  }\n}\n\ntype IAnimationCallBack = (v: number) => void;\n\nexport type IAnimationEasing = (v: number) => number;\n\nexport type IAnimationOptions = {\n  duration?: number; // 动画持续时间\n  easing?: IAnimationEasing; // 动画变换函数\n  delay?: number; // 动画延迟多久执行，负数的话，会在第一次把这个时间内的变化一次性用掉，具体看css3-transition-delay\n};\n\nexport { requestAnimationFrame, cancelAnimationFrame };\n\nexport default Animation;\n"],"names":["last","root","window","global","vendors","raf","requestAnimationFrame","caf","cancelAnimationFrame","cancelRequestAnimationFrame","i","fn","now","Date","delay","Math","max","setTimeout","id","clearTimeout","delayCall","callback","abs","Animation","_temp","_ref","duration","easing","this","_delay","_frameId","_elapsed","_sleepId","_delayId","_tick","_delayFn","v","_proto","prototype","start","frameFn","_this","elapsed","tick","restart","stop","sleep","time","_this2","end"],"mappings":"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"}